/*
 * Silahkan digunakan dengan bebas / dimodifikasi
 * Dengan tetap mencantumkan nama @author dan Referensi / Source
 * Terima Kasih atas Kerjasamanya.
 */
package com.agung.jpa;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Agung Pramono
 */
public class FormBiodata extends javax.swing.JFrame {

    private final TabelModelMahasiswa tabelModel;
    
    public FormBiodata() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("CRUD-JPA");
        
        tabelModel = new TabelModelMahasiswa();
        tabelMahasiswa.setModel(tabelModel);
        
        //tambahkan aksi seleksi baris
        tabelMahasiswa.getSelectionModel().addListSelectionListener(
                new ListSelectionListener(){//menggunakan anonymouse innerclass

            @Override
            public void valueChanged(ListSelectionEvent e) {
                //dapatkan baris terseleksi
                int baris = tabelMahasiswa.getSelectedRow();
                //cek apakah baris terseleksi
                if(baris != -1){
                    //jika terseleksi tampilkan data di form
                    //dapatkan mahasiswa dari tabel
                    Mahasiswa mhs = tabelModel.get(baris);
                    //tampilkan data di form
                    txtNim.setText(mhs.getId());
		    txtNama.setText(mhs.getNama());
		    txaAlamat.setText(mhs.getAlamat());
                }
            }
            
        });
        //panggil aksi tombol refresh
        btnRefreshActionPerformed(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNim = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaAlamat = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelMahasiswa = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnTambah = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aplikasi Crud-JPA", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("NIM  :");

        jLabel2.setText("Nama  :");

        jLabel3.setText("Alamat  :");

        txaAlamat.setColumns(20);
        txaAlamat.setRows(5);
        jScrollPane1.setViewportView(txaAlamat);

        tabelMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelMahasiswa);

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNim, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNim, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnUpdate)
                    .addComponent(btnRefresh)
                    .addComponent(btnHapus))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        
        if(txtNim.getText() != null && !txtNim.getText().isEmpty()){
            //membuat entity manager
            EntityManager manager = PersistenceUtilities.getEntityManagerFactory()
                                                            .createEntityManager();
                try{
                    //memulai transaksi
                    manager.getTransaction().begin();
            
                    //buat Mahasiswa
                    Mahasiswa mhs = new Mahasiswa();
                    mhs.setId(txtNim.getText());
                    mhs.setNama(txtNama.getText());
                    mhs.setAlamat(txaAlamat.getText());
            
                    //bersihkan form
                    txtNim.setText("");
                    txtNama.setText("");
                    txaAlamat.setText("");
            
                    //simpan mahasiswa kedalam database
                     manager.persist(mhs);
                    //tambahkan ke tabel
                    tabelModel.add(mhs);
            
                    //commit transaksi
                    manager.getTransaction().commit();
                }
                catch(Throwable t){
                    t.printStackTrace();
                    //lakukan rollback transaksi
                     manager.getTransaction().rollback();
                }finally{
                    //tutup entity
                     manager.close();
            }
            
        }else{
               JOptionPane.showMessageDialog(null, "Form Belum di isi","Error",JOptionPane.ERROR_MESSAGE);
                txtNim.requestFocus(); 
        } 
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //dapatkan baris tabel terseleksi
        int baris = tabelMahasiswa.getSelectedRow();
        
        //cek apakah baris terseleksi
        if(baris < 0){
            //jika tidak batalkan aksi ubah
            return;
        }
        
        //membuat entity manager
        EntityManager manager = PersistenceUtilities.getEntityManagerFactory().createEntityManager();
        try{
            //mulai transaksi
            manager.getTransaction().begin();
            
            //dapatkan mahasiswa dari tabel
            Mahasiswa mhs = tabelModel.get(baris);
            
            //ubah data mahasiswa
            mhs.setId(txtNim.getText());
            mhs.setNama(txtNama.getText());
            mhs.setAlamat(txaAlamat.getText());
            
            //simpan perubahan ke database
            manager.merge(mhs);
            //ubah mahsiswa di tabel
            tabelModel.edit(baris, mhs);
            
            //commit transaksi
            manager.getTransaction().commit();
        }
        catch(Throwable t){
            t.printStackTrace();
            //lakukan rollback
            manager.getTransaction().rollback();
        }
        finally{
            //tutup manager
            manager.close();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        //membuat entity manager
        EntityManager manager = PersistenceUtilities.getEntityManagerFactory().createEntityManager();
        try{
           //muat seleuruh data mahasiswa
            List list = manager.createQuery("select a from Mahasiswa a order by a.id").getResultList();
            //ubah seluru data mahasiswaa ditabel
            tabelModel.setData(list);
        }
        catch(Throwable t){
            t.printStackTrace();
        }
        finally{
            //tutup manager
            manager.close();
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        //dapatkan baris tabel terseleksi
        int baris = tabelMahasiswa.getSelectedRow();
        
        //cek apakah baris terseleksi
        if(baris < 0){
            //jika tidak batalkan aksi ubah
            return;
        }
        
        //konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data Mahasiswa ?",
                "Konfirmasi",JOptionPane.YES_NO_OPTION);
        if(confirm != 0){
            return;
        }
        
        //membuat entity manager
        EntityManager manager = PersistenceUtilities.getEntityManagerFactory().createEntityManager();
        try{
            //mulai transaksi
            manager.getTransaction().begin();
            
            //dapatkan mahasiswa dari tabel
            Mahasiswa mhs = tabelModel.get(baris);
            
            //hapus mahsiswa di database
            manager.remove(manager.merge(mhs));
            //hapus data mahasiswa di database
            tabelModel.delete(baris);
            
            
            manager.getTransaction().commit();
        }
        catch(Throwable t){
            t.printStackTrace();
            //lakukan rollback
            manager.getTransaction().rollback();
        }
        finally{
            //tutup manager
            manager.close();
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabelMahasiswa;
    private javax.swing.JTextArea txaAlamat;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNim;
    // End of variables declaration//GEN-END:variables
}
